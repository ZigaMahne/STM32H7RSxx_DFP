<?xml version="1.0" encoding="UTF-8"?>
<package schemaVersion="1.7.36" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Open-CMSIS-Pack/Open-CMSIS-Pack-Spec/v1.7.36/schema/PACK.xsd">
  <vendor>Keil</vendor>
  <name>STM32H7RSxx_DFP</name>
  <description overview="Documents/OVERVIEW.md">STMicroelectronics STM32H7RSxx Series Device Support</description>
  <url>https://www.keil.com/pack/</url>
  <repository type="git">https://github.com/Open-CMSIS-Pack/STM32H7RSxx_DFP.git</repository>
  <license>LICENSES</license>
  <licenseSets>
    <licenseSet id="all" default="true" gating="true">
      <license title="Apache-2.0 License for CMSIS add-ons"                  name="LICENSE-Apache-2.0"   spdx="Apache-2.0"/>
      <license title="BSD-3-Clause License for STMicroelectronics STM32 HAL" name="LICENSE-BSD-3-Clause" spdx="BSD-3-Clause"/>
    </licenseSet>
  </licenseSets>

  <releases>
    <release version="1.0.4-dev">
      Active development...
      Updated documentation references
      Device support:
      - Shortened device family description
      - Added Ddsp processor attribute
      - Updated debug configuration files (MCU APBx Freeze registers)
    </release>
  </releases>

  <keywords>
    <keyword>ST</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package STMicroelectronics</keyword>
    <keyword>STM32H7RS</keyword>
    <keyword>STM32H7RSxx</keyword>
  </keywords>

  <devices>
    <family Dfamily="STM32H7RS Series" Dvendor="STMicroelectronics:13">
      <processor Dcore="Cortex-M7" DcoreVersion="r0p1" Dclock="550000000" Dmpu="MPU" Dfpu="DP_FPU" Dendian="Little-endian" Ddsp="DSP"/>
      <debugconfig default="swd" swj="true" clock="5000000" sdf="CMSIS/Debug/STM32H7Rx_7Sx.sdf"/>

      <description>
High-performance STM32H7 MCUs with Arm Cortex-M7 core, MPU, L1 cache, DSP, DP-FPU, 1284 DMIPS at 600 MHz.
      </description>

      <book name="https://developer.arm.com/documentation/dui0646/latest" title="Cortex-M7 Generic User Guide"/>
      <book name="https://www.st.com/resource/en/reference_manual/rm0477-stm32h7rx7sx-armbased-32bit-mcus-stmicroelectronics.pdf" title="STM32H7Rx/Sx Arm-based 32-bit MCUs Reference Manual"/>

      <algorithm name="CMSIS/Flash/MX66UW1G45G_STM32H7S78-DK.FLM"        start="0x70000000" size="0x08000000" RAMstart="0x20000000" RAMsize="0x00010000"  default="0" />
      <algorithm name="CMSIS/Flash/MX25UW25645G_STM32H7S38-NUCLEO.FLM"   start="0x70000000" size="0x02000000" RAMstart="0x20000000" RAMsize="0x00010000"  default="0" />
      <algorithm name="CMSIS/Flash/MX66UW1G45G_STM32H7S78-DK-XSPIM1.FLM" start="0x90000000" size="0x08000000" RAMstart="0x20000000" RAMsize="0x00010000" default="0" />

      <debugvars configfile="CMSIS/Debug/STM32H7Rx_7Sx.dbgconf" version="1.0.1">
        // Default values for variables in debug sequences are configured with a *.dbgconf file in the user project
        __var DbgMCU_CR        = 0x00000007;   // DBGMCU_CR:       DBGMCU configuration register
                                               //                  [21] DBGCKEN, [20] TRACECLKEN
                                               //                  [ 2] DBGSTBY, [ 1] DBGSTOP,  [ 0] DBGSLEEP
        __var DbgMCU_AHB5_Fzr  = 0x0000FFFF;   // DBGMCU_AHB5FZR:  DBGMCU AHB5 peripheral freeze register
        __var DbgMCU_AHB1_Fzr  = 0x0000FFFF;   // DBGMCU_AHB1FZR:  DBGMCU AHB1 peripheral freeze register
        __var DbgMCU_APB1_Fzr  = 0x00E00BFF;   // DBGMCU_APB1FZR:  DBGMCU APB1 peripheral freeze register
        __var DbgMCU_APB2_Fzr  = 0x000F0001;   // DBGMCU_APB2FZR:  DBGMCU APB2 peripheral freeze register
        __var DbgMCU_APB4_Fzr  = 0x00041E00;   // DBGMCU_APB4FZR:  DBGMCU APB4 peripheral freeze register
        __var TraceClk_Pin     = 0x00040002;   // PE2
        __var TraceD0_Pin      = 0x00040003;   // PE3
        __var TraceD1_Pin      = 0x00040004;   // PE4
        __var TraceD2_Pin      = 0x00040005;   // PE5
        __var TraceD3_Pin      = 0x00040006;   // PE6
      </debugvars>

      <sequences>
        <!-- Override for Pre-Defined Sequences -->
        <sequence name="DebugDeviceUnlock">
          <block>
            __var value = 0;

            Sequence("CheckID");

            __ap   = 0;                                         // Switch to System Debug Access Port

            value  = Read32(0xE00E1004);                        // Read DBGMCU_CR
            value |= 0x00200000;                                // set preset values (enable all debug clocks by default)
                                                                // DBGMCU_CR: [21] DBGCKEN
          </block>

          <control if="__traceout"> <!-- Enable Trace Clock and hence access to global trace components now -->
            <block>
              value |= 0x00100000;                              // DBGMCU_CR[20] TRACECLKEN
            </block>
          </control>

          <block>
            Write32(0xE00E1004, value);                         // Update DBGMCU_CR
          </block>

          <block info="DbgMCU registers">
            Write32(0xE00E1004 , DbgMCU_CR        | value);     // DBGMCU_CR:       Configure MCU Debug
            Write32(0xE00E101C , DbgMCU_AHB5_Fzr         );     // DBGMCU_AHB5FZR:  Configure DBGMCU AHB5 peripheral freeze behavior
            Write32(0xE00E1024 , DbgMCU_AHB1_Fzr         );     // DBGMCU_AHB1FZR:  Configure DBGMCU AHB1 peripheral freeze behavior
            Write32(0xE00E103C , DbgMCU_APB1_Fzr         );     // DBGMCU_APB1FZR:  Configure DBGMCU APB1 peripheral freeze behavior
            Write32(0xE00E104C , DbgMCU_APB2_Fzr         );     // DBGMCU_APB2FZR:  Configure DBGMCU APB2 peripheral freeze behavior
            Write32(0xE00E1054 , DbgMCU_APB4_Fzr         );     // DBGMCU_APB4FZR:  Configure DBGMCU APB4 peripheral freeze behavior
          </block>
        </sequence>

        <sequence name="TraceStart">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                               // SWO (asynchronous) Trace Selected?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                               // TPIU (synchronous) Trace Selected?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("EnableTraceSWO");                                                  // Call SWO Trace Setup
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("EnableTraceTPIU");                                                 // Call TPIU Trace Setup
            </block>
          </control>
        </sequence>

        <sequence name="TraceStop">
          <block>
            // Nothing required for SWO Trace
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                               // SWO enabled?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                               // Synchronous trace port enabled?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("DisableTraceSWO");
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("DisableTraceTPIU");
            </block>
          </control>
        </sequence>

        <!-- User-Defined Sequences -->
        <sequence name="CheckID">
          <block>
            __var pidr1 = 0;
            __var pidr2 = 0;
            __var jep106id = 0;
            __var ROMTableBase = 0;

            __ap = 0;      // System debug access port (APB-AP)

            ROMTableBase = ReadAP(0xF8) &amp; ~0x3;

            pidr1 = Read32(ROMTableBase + 0x0FE4);
            pidr2 = Read32(ROMTableBase + 0x0FE8);
            jep106id = ((pidr2 &amp; 0x7) &lt;&lt; 4 ) | ((pidr1 &gt;&gt; 4) &amp; 0xF);
          </block>

          <control if="jep106id != 0x20">
            <block>
              Query(0, "Not a genuine ST Device! Abort connection", 1);
              Message(2, "Not a genuine ST Device! Abort connection.");
            </block>
          </control>
        </sequence>

        <sequence name="EnableTraceSWO">
          <block>
            __var value = 0;

            Sequence("ConfigureTraceSWOPin");

            __ap   = 0;                                                                    // Switch to System Debug Access Port

            // Enable Trace Clock
            // not necessary because already done in "DebugDeviceUnlock".

//          // Configure SWO Funnel (SWTF) at 0xE00E4000
//          value      =  Read32(0xE00E4000);                                              // Read Trace Funnel CONTROL Register
//          value &amp;=  0x00000F00;                                                      // Preserve Hold Time Settings,
//          value     |=  0x00000001;                                                      // Enable ITM slave ports
//          Write32(0xE00E4000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="DisableTraceSWO">
          <block>
            __var value = 0;

            __ap   = 0;                                                                    // Switch to System Debug Access Port

            // Disable Trace Clock
            value      =  Read32(0xE00E1004);                                              // Read DBGMCU_CR
            value &amp;= ~0x00100000;                                                      // DBGMCU_CR[20] : set TraceClkEn
            Write32(0xE00E1004, value);                                                    // Update DBGMCU_CR

//          // Configure SWO Funnel (SWTF) at 0xE00E4000
//          value      =  Read32(0xE00E4000);                                              // Read Trace Funnel CONTROL Register
//          value &amp;=  0x00000F00;                                                      // Preserve Hold Time Settings, disable active slave ports
//          Write32(0xE00E4000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="EnableTraceTPIU">
          <block>
            __var value = 0;

            Sequence("ConfigureTraceTPIUPins");

            __ap   = 0;                                                                    // Switch to System Debug Access Port

            // Enable Trace Clock
            // not necessary because already done in "DebugDeviceUnlock".

//          // Configure CoreSight Trace Funnel (CSTF) at 0xE00F3000
//          value      =  Read32(0xE00F3000);                                              // Read Trace Funnel CONTROL Register
//          value &amp;=  0x00000F00;                                                      // Preserve Hold Time Settings
//          value     |=  0x00000003;                                                      // Enable ITM and ETM slave ports
//          Write32(0xE00F3000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="DisableTraceTPIU">
          <block>
            __var value = 0;

            __ap   = 0;                                                                    // Switch to System Debug Access Port

            // Disable Trace Clock
            value      =  Read32(0xE00E1004);                                              // Read DBGMCU_CR
            value &amp;= ~0x00100000;                                                      // DBGMCU_CR[20] : set TraceClkEn
            Write32(0xE00E1004, value);                                                    // Update DBGMCU_CR

//          // Configure CoreSight Trace Funnel (CSTF) at 0xE00F3000
//          value      =  Read32(0xE00F3000);                                              // Read Trace Funnel CONTROL Register
//          value &amp;=  0x00000FFC;                                                      // Preserve Hold Time Settings and other possibly set slave ports
//          Write32(0xE00F3000, value);                                                    // Update Trace Funnel CONTROL Register
          </block>
        </sequence>

        <sequence name="ConfigureTraceSWOPin">
          <block>
            __var pin     = 0;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var SWO_Pin = 0x00010003;          // PB3
          </block>

            <!-- configure SWO -->
            <block info="configure SWO">
              pin     =               ((SWO_Pin            ) &amp; 0x0000FFFF);
              port    =               ((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF);
              portAdr = 0x58020000 + (((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB4ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
        </sequence>

        <sequence name="ConfigureTraceTPIUPins">
          <block>
            __var pin     = 8;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;

            __var width   = (__traceout &amp; 0x003F0000) &gt;&gt; 16;
          </block>

            <!-- configure TRACECLK -->
            <block info="configure TRACECLK">
              pin     =                (TraceClk_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB4ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <!-- configure TRACED0 -->
            <block info="configure TRACED0">
              pin     =                (TraceD0_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB4ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <!-- configure TRACED1 -->
            <block info="configure TRACED1">
              pin     =                (TraceD1_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB4ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <!-- configure TRACED2 -->
            <block info="configure TRACED2">
              pin     =                (TraceD2_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_AHB4ENR:   IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

            <!-- configure TRACED3 -->
            <block info="configure TRACED3">
              pin     =                (TraceD3_Pin            ) &amp; 0x0000FFFF;
              port    =                (TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x58020000 + (((TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF) * 0x400);

              pos = pin * 2;
              Write32(0x58024540,     ((Read32(0x58024540    )                         ) | (1 &lt;&lt; port)) );  // RCC_C1_AHB4ENR:IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>
        </sequence>
      </sequences>

      <!-- ************************  Subfamily 'STM32H7R3'  **************************** -->
      <subFamily DsubFamily="STM32H7R3">
        <debug __ap="1" svd="CMSIS/SVD/STM32H7R.svd"/>
        <compile define="STM32H7R3xx"/>

        <book name="https://www.st.com/resource/en/datasheet/stm32h7r3a8.pdf" title="STM32H7R3x8 STM32H7R7x8 Datasheet"/>

        <!-- default memory configuration.
             Optionbyte settings: FLASH_OBW2SR.ECC_ON_SRAM = 0
                                  FLASH_OBW2SR.DTCM_AXI_SHARE = 0 
                                  FLASH_OBW2SR.ITCM_AXI_SHARE = 0      -->
        <memory name="ITCM_RAM"   access="rwx" start="0x00000000" size="0x00010000" init="0" default="0" />
        <memory name="DTCM_RAM"   access="rw"  start="0x20000000" size="0x00010000" init="0" default="0" />
        <memory name="AXI_SRAM"   access="rwx" start="0x24000000" size="0x00072000" init="0" default="1" />
        <memory name="AHB_SRAM"   access="rw"  start="0x30000000" size="0x00008000" init="0" default="1" />
        <memory name="BKP_SRAM"   access="rw"  start="0x38800000" size="0x00001000" init="0" default="0" />

        <!-- ################################### 64 KB ################################## -->
        <!-- *************************  Device 'STM32H7R3R8Vx  ***************************** -->
        <device Dname="STM32H7R3R8Vx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="68"/>
        </device>

        <!-- *************************  Device 'STM32H7R3V8Tx  ***************************** -->
        <device Dname="STM32H7R3V8Tx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H7R3Z8Tx  ***************************** -->
        <device Dname="STM32H7R3Z8Tx">
          <memory name="Flash"     access="rx" start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H7R3I8Tx  ***************************** -->
        <device Dname="STM32H7R3I8Tx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7R3V8Yx  ***************************** -->
        <device Dname="STM32H7R3V8Yx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="CSP" n="101"/>
        </device>

        <!-- *************************  Device 'STM32H7R3V8Hx  ***************************** -->
        <device Dname="STM32H7R3V8Hx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H7R3Z8Jx  ***************************** -->
        <device Dname="STM32H7R3Z8Jx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H7R3A8Ix  ***************************** -->
        <device Dname="STM32H7R3A8Ix">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H7R3I8Kx  ***************************** -->
        <device Dname="STM32H7R3I8Kx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7R3L8Hx  ***************************** -->
        <device Dname="STM32H7R3L8Hx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>

        <!-- *************************  Device 'STM32H7R3L8HxH  **************************** -->
        <device Dname="STM32H7R3L8HxH">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H7S3'  **************************** -->
      <subFamily DsubFamily="STM32H7S3">
        <debug __ap="1" svd="CMSIS/SVD/STM32H7S.svd"/>
        <compile define="STM32H7S3xx"/>

        <book name="https://www.st.com/resource/en/datasheet/stm32h7s3a8.pdf" title="STM32H7S3x8 STM32H7S7x8 Datasheet"/>

        <!-- default memory configuration.
             Optionbyte settings: FLASH_OBW2SR.ECC_ON_SRAM = 0
                                  FLASH_OBW2SR.DTCM_AXI_SHARE = 0 
                                  FLASH_OBW2SR.ITCM_AXI_SHARE = 0      -->
        <memory name="ITCM_RAM"   access="rwx" start="0x00000000" size="0x00010000" init="0" default="0" />
        <memory name="DTCM_RAM"   access="rwx" start="0x20000000" size="0x00010000" init="0" default="1" />
        <memory name="AXI_SRAM"   access="rwx" start="0x24000000" size="0x00072000" init="0" default="1" />
        <memory name="AHB_SRAM"   access="rwx" start="0x30000000" size="0x00008000" init="0" default="1" />
        <memory name="BKP_SRAM"   access="rwx" start="0x38800000" size="0x00001000" init="0" default="0" />

        <!-- ################################### 64 KB ################################## -->
        <!-- *************************  Device 'STM32H7S3R8Vx  ***************************** -->
        <device Dname="STM32H7S3R8Vx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="68"/>
        </device>

        <!-- *************************  Device 'STM32H7S3V8Tx  ***************************** -->
        <device Dname="STM32H7S3V8Tx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H7S3Z8Tx  ***************************** -->
        <device Dname="STM32H7S3Z8Tx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H7S3I8Tx  ***************************** -->
        <device Dname="STM32H7S3I8Tx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7S3V8Yx  ***************************** -->
        <device Dname="STM32H7S3V8Yx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="CSP" n="101"/>
        </device>

        <!-- *************************  Device 'STM32H7S3V8Hx  ***************************** -->
        <device Dname="STM32H7S3V8Hx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H7S3Z8Jx  ***************************** -->
        <device Dname="STM32H7S3Z8Jx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H7S3A8Ix  ***************************** -->
        <device Dname="STM32H7S3A8Ix">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H7S3I8Kx  ***************************** -->
        <device Dname="STM32H7S3I8Kx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7S3L8Hx  ***************************** -->
        <device Dname="STM32H7S3L8Hx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>

        <!-- *************************  Device 'STM32H7S3L8HxH  **************************** -->
        <device Dname="STM32H7S3L8HxH">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H7R7'  **************************** -->
      <subFamily DsubFamily="STM32H7R7">
        <debug __ap="1" svd="CMSIS/SVD/STM32H7R.svd"/>
        <compile define="STM32H7R7xx"/>

        <book name="https://www.st.com/resource/en/datasheet/stm32h7r3a8.pdf" title="STM32H7R3x8 STM32H7R7x8 Datasheet"/>

        <!-- default memory configuration.
             Optionbyte settings: FLASH_OBW2SR.ECC_ON_SRAM = 0
                                  FLASH_OBW2SR.DTCM_AXI_SHARE = 0 
                                  FLASH_OBW2SR.ITCM_AXI_SHARE = 0      -->
        <memory name="ITCM_RAM"   access="rwx" start="0x00000000" size="0x00010000" init="0" default="0" />
        <memory name="DTCM_RAM"   access="rwx" start="0x20000000" size="0x00010000" init="0" default="1" />
        <memory name="AXI_SRAM"   access="rwx" start="0x24000000" size="0x00072000" init="0" default="1" />
        <memory name="AHB_SRAM"   access="rwx" start="0x30000000" size="0x00008000" init="0" default="1" />
        <memory name="BKP_SRAM"   access="rwx" start="0x38800000" size="0x00001000" init="0" default="0" />

        <!-- ################################### 64 KB ################################## -->
        <!-- *************************  Device 'STM32H7R7I8Tx  ***************************** -->
        <device Dname="STM32H7R7I8Tx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7R7Z8Jx  ***************************** -->
        <device Dname="STM32H7R7Z8Jx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H7R7A8Ix  ***************************** -->
        <device Dname="STM32H7R7A8Ix">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H7R7I8Kx  ***************************** -->
        <device Dname="STM32H7R7I8Kx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7R7L8Hx  ***************************** -->
        <device Dname="STM32H7R7L8Hx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>

        <!-- *************************  Device 'STM32H7R7L8HxH  **************************** -->
        <device Dname="STM32H7R7L8HxH">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>
      </subFamily>

      <!-- ************************  Subfamily 'STM32H7S7'  **************************** -->
      <subFamily DsubFamily="STM32H7S7">
        <debug __ap="1" svd="CMSIS/SVD/STM32H7S.svd"/>
        <compile define="STM32H7S7xx"/>

        <book name="https://www.st.com/resource/en/datasheet/stm32h7s3a8.pdf" title="STM32H7S3x8 STM32H7S7x8 Datasheet"/>

        <!-- default memory configuration.
             Optionbyte settings: FLASH_OBW2SR.ECC_ON_SRAM = 0
                                  FLASH_OBW2SR.DTCM_AXI_SHARE = 0 
                                  FLASH_OBW2SR.ITCM_AXI_SHARE = 0      -->
        <memory name="ITCM_RAM"   access="rwx" start="0x00000000" size="0x00010000" init="0" default="0" />
        <memory name="DTCM_RAM"   access="rwx" start="0x20000000" size="0x00010000" init="0" default="1" />
        <memory name="AXI_SRAM"   access="rwx" start="0x24000000" size="0x00072000" init="0" default="1" />
        <memory name="AHB_SRAM"   access="rwx" start="0x30000000" size="0x00008000" init="0" default="1" />
        <memory name="BKP_SRAM"   access="rwx" start="0x38800000" size="0x00001000" init="0" default="0" />

        <!-- ################################### 64 KB ################################## -->
        <!-- *************************  Device 'STM32H7S7I8Tx  ***************************** -->
        <device Dname="STM32H7S7I8Tx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="QFP" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7S7Z8Jx  ***************************** -->
        <device Dname="STM32H7S7Z8Jx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H7S7A8Ix  ***************************** -->
        <device Dname="STM32H7S7A8Ix">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H7S7I8Kx  ***************************** -->
        <device Dname="STM32H7S7I8Kx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H7S7L8Hx  ***************************** -->
        <device Dname="STM32H7S7L8Hx">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>

        <!-- *************************  Device 'STM32H7S7L8HxH  **************************** -->
        <device Dname="STM32H7S7L8HxH">
          <memory name="Flash" access="rx"                start="0x08000000" size="0x00010000" startup="1" default="1" />
          <algorithm name="CMSIS/Flash/STM32H7Rx_64k.FLM" start="0x08000000" size="0x00010000" RAMstart="0x20000000" RAMsize="0x00010000" default="1" />

          <feature type="BGA" n="225"/>
        </device>

      </subFamily>

    </family>

  </devices>

  <conditions>
    <!-- Device Conditions -->
    <condition id="STM32H7RS">
      <description>STMicroelectronics STM32H7RS Devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H7[RS]*"/>
    </condition>

    <!-- Device + CMSIS Conditions -->
    <condition id="STM32H7RS CMSIS">
      <description>STMicroelectronics STM32H7RS Device and CMSIS-CORE</description>
      <require condition="STM32H7RS"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

  </conditions>

  <components>
    <!-- CubeMX Generator -->
    <component generator="CubeMX" Cclass="Device" Cgroup="CubeMX" Cversion="1.0.0" condition="STM32H7RS CMSIS">
      <description>Configuration via STM32CubeMX</description>
      <RTE_Components_h>
        #define RTE_DEVICE_CUBE_MX
        #define CMSIS_device_header "stm32h7rsxx.h"
      </RTE_Components_h>
      <files>
        <file category="doc" name="https://open-cmsis-pack.github.io/cmsis-toolbox/CubeMX"/>
      </files>
    </component>
  </components>

  <csolution>
    <!-- CubeMX Basic CMSIS Solution template -->
    <template name="CubeMX Basic solution" path="Templates/CubeMX" file="CubeMX.csolution.yml" condition="STM32H7RS">
      <description>Create a CubeMX basic solution with project</description>
    </template>
  </csolution>
</package>
